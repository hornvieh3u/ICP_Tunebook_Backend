type Friend = record { "principal" : text; username : text; avatar : blob };
type Profile = record {
  pob : text;
  "principal" : text;
  username : text;
  incoming_fr : vec Friend;
  outcoming_fr : vec Friend;
  instruments : text;
  friends : vec text;
  avatar : blob;
};
type Session = record {
  id : nat32;
  "principal" : text;
  contact : text;
  name : text;
  comment : text;
  location : text;
  daytime : text;
};
type Tune = record {
  title : text;
  origin : bool;
  timestamp : nat64;
  principals : vec text;
  tune_data : opt text;
};
type Tuneinfo = record { title : text; tune_data : text };
service : (nat64) -> {
  accept_friend_request : (text, text) -> (bool);
  add_session : (text, text, text, text, text, text) -> (bool);
  add_tune : (text, text, text, bool) -> (bool);
  authentication : (text) -> (opt Profile) query;
  browse_people : (text, text, int32) -> (vec Friend, int32) query;
  filter_tunes : (text, text, text, int32) -> (vec Tuneinfo, int32) query;
  get_friends : (text) -> (vec Friend) query;
  get_new_tunes_from_friends : (text) -> (vec Tune) query;
  get_original_tune : (text) -> (text) query;
  get_original_tune_list : (int32) -> (vec text, int32) query;
  get_sessions : (text, int32) -> (vec Session, int32) query;
  get_user_tune : (text, text) -> (text) query;
  get_user_tune_list : (text, int32) -> (vec Tuneinfo, int32) query;
  send_friend_request : (text, text) -> (opt Friend);
  update_profile : (text, text, text, text, blob) -> (Profile);
  update_session : (nat32, text, text, text, text, text, text) -> (bool);
  update_tune : (text, text, text, bool) -> (bool);
}